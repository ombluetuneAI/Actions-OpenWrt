#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build package

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      Arch:
        description: '目标架构'
        default: 'x86_64'
      Version:
        description: '版本号'
        default: '21.02.3'
      Package:
        description: '软件包位置'
        default: 'luci-app-fullconenat'

env:
  ARCH: ${{ github.event.inputs.Arch }}
  VERSION: ${{ github.event.inputs.Version }}
  SDK_URL: https://downloads.openwrt.org/releases/
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    - name: Download SDK
      working-directory: /workdir
      run: |
        df -hT $PWD
        if [[ ${ARCH} == "x86_64" ]]; then
          export DIR="x86/64"
          export ARCH_NAME="x86-64"
        fi
        URL="${SDK_URL}${VERSION}/targets/${DIR}/openwrt-sdk-${VERSION}-${ARCH_NAME}_gcc-8.4.0_musl.Linux-${ARCH}.tar.xz"
        echo $URL
        curl -fL -m 60 -o sdk.tar.xz $URL
        tar -xf sdk.tar.xz -C /workdir
        ls -l /workdir
        mv /workdir/openwrt-sdk* /workdir/openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        # make download -j8 ${{ github.event.inputs.Package }}
        # find dl -size -1024c -exec ls -l {} \;
        # find dl -size -1024c -exec rm -f {} \;
    - name: Compile the Packages
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) package/${{ github.event.inputs.Package }}/compile || make -j1 package/${{ github.event.inputs.Package }}/compile || make -j1 V=s package/${{ github.event.inputs.Package }}/compile
        echo "::set-output name=status::success"
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
